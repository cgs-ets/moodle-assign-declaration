{"version":3,"file":"modal_add_new_declaration.min.js","sources":["../src/modal_add_new_declaration.js"],"sourcesContent":["import Modal from 'core/modal';\r\nimport CustomEvents from 'core/custom_interaction_events';\r\n\r\nconst SELECTORS = {\r\n    ADD_BUTTON: '[data-action=\"add\"]',\r\n    CANCEL_BUTTON: '[data-action=\"cancel\"]',\r\n};\r\n\r\nexport default class NewDeclarationModal extends Modal {\r\n    static TYPE = 'assignsubmission_declaration-addnewdeclaration';\r\n    static TEMPLATE = 'assignsubmission_declaration/assignsubmission_declaration_modal';\r\n\r\n    registerEventListeners() {\r\n        // Apply parent event listeners.\r\n        super.registerEventListeners(this);\r\n\r\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.ADD_BUTTON, function (e, data) {\r\n            // Add your logic for when the login button is clicked.\r\n\r\n            let match = Array.from(document.querySelectorAll('[id^=id_assignsubmission_declaration_]')); // Get the ids that start with this string\r\n            const currentIds = match.filter(id => { // The format of the ids is id_assignsubmission_declaration_1. This returns an array of elements\r\n                if (id.getAttribute('id').match(/(\\d+)\\D*$/)) return id;\r\n            });\r\n\r\n            let lastNumber = (currentIds[currentIds.length - 2]).getAttribute('id'); // We get the textarea and checkbox id, the textarea is easier to work with.\r\n            lastNumber = lastNumber.split('_');\r\n            lastNumber = lastNumber.filter(val => {\r\n                if (!isNaN(val)) return val;\r\n            });\r\n            const newID = (JSON.parse(document.getElementById('id_declarationjson').value).length + 1); //parseInt(lastNumber[lastNumber.length - 1]) + 1;\r\n\r\n            const newDec = {\r\n                declaration_title: document.getElementById('inputTitle').value,\r\n                declaration_text: document.getElementById('inputContent').value,\r\n                id: newID,\r\n                assignment: document.getElementById('id_declarationjson').getAttribute('assignmentid'),\r\n                selected: 0\r\n            };\r\n\r\n            document.getElementById('inputTitle').classList.remove('input-error');\r\n            document.getElementById('inputContent').classList.remove('input-error');\r\n\r\n            if (newDec.declaration_title == '') {\r\n                document.getElementById('inputTitle').classList.add('input-error');\r\n                return;\r\n            }\r\n\r\n            if (newDec.declaration_text == '') {\r\n                document.getElementById('inputContent').classList.add('input-error');\r\n                return;\r\n            }\r\n\r\n            const declaration = document.getElementById('fgroup_id_assignsubmission_declaration_group_1'); // Its the first oneof all.\r\n            const declarationSubmissionContainer = document.getElementById('id_submissiontypescontainer');\r\n            const btnContainer = document.querySelector('.add-new-declaration-container');\r\n\r\n            let newDeclaration = declaration.cloneNode(true);\r\n            newDeclaration.setAttribute('id', `fgroup_id_assignsubmission_declaration_group_${newDec.id}`);\r\n\r\n            Array.from(newDeclaration.children).forEach((child, index) => {\r\n\r\n                if (index == 0) {\r\n                    // Title section\r\n                    const newid = `fgroup_id_assignsubmission_declaration_group_label_${(JSON.parse(document.getElementById('id_declarationjson').value).length + 1)}`; //_${newDec.declaration_title}\r\n                    child.children[index].setAttribute('id', newid);\r\n                    newDec.old_title = child.children[index].innerHTML.replace(/^\\s+|\\s+$/g, '');\r\n                    child.children[index].setAttribute('data-current-title', newDec.declaration_title);\r\n                    child.children[index].innerHTML = newDec.declaration_title;\r\n\r\n                    child.setAttribute('contenteditable', true);\r\n                    child.addEventListener('input', function (e) {\r\n                        //title div -> textarea div\r\n                        let id = document.getElementById(e.target.id).nextElementSibling.children[0].children[1].children[1].getAttribute('id'); // Get the element that has the textarea nested and that it has the id we need.\r\n                        id = id[id.length - 1];\r\n\r\n                        const data = JSON.parse(document.getElementById('id_declarationjson').value);\r\n                        const updateData = {\r\n                            id: id,\r\n                            declaration_title: document.getElementById(e.target.id).children[0].innerHTML.replace(/^\\s+|\\s+$/g, '')\r\n                        };\r\n                        data.forEach((d) => {\r\n                            if (d.id == updateData.id) {\r\n                                d.declaration_title = updateData.declaration_title;\r\n                            }\r\n                        }, updateData);\r\n                        document.getElementById('id_declarationjson').value = JSON.stringify(data);\r\n                    });\r\n                } else {\r\n\r\n                    Array.from(child.children).forEach((child, index) => {\r\n                        if (index == 0) {\r\n\r\n                            Array.from(child.children).forEach((child, index) => {\r\n                                if (index == 0) {\r\n                                    child.innerHTML = newDec.declaration_title; //Legend\r\n                                } else {\r\n\r\n                                    Array.from(child.children).forEach((child, index) => {\r\n                                        if (index == 0) {\r\n                                            child.setAttribute('for', `id_assignsubmission_declaration_${newDec.id}`);\r\n                                        } else if (index == 1) { // Textarea.\r\n                                            child.innerHTML = newDec.declaration_text;\r\n\r\n                                            child.removeAttribute('placeholder');\r\n                                            child.setAttribute('value', newDec.declaration_text);\r\n                                            child.setAttribute('id', `id_assignsubmission_declaration_${newDec.id}`)\r\n                                            child.setAttribute('name', `assignsubmission_declaration_${newDec.id}`)\r\n\r\n                                        } else if (index == 2) { // Checkbox.\r\n\r\n                                            Array.from(child.children).forEach((child, index) => {\r\n                                                child.value = 0;\r\n                                                child.removeAttribute('checked');\r\n                                                child.setAttribute('id', `id_assignsubmission_declaration_${newDec.id}_check`);\r\n                                                child.setAttribute('name', `assignsubmission_declaration_${newDec.id}_check`);\r\n                                                child.addEventListener('change', function (e) {\r\n                                                    if (e.target.checked) {\r\n                                                        let declaration = JSON.parse(document.getElementById('id_declarationjson').value);\r\n                                                        declaration.forEach(decl => {\r\n                                                            if (decl.id == newDec.id) {\r\n                                                                decl.selected = 1;\r\n                                                            }\r\n                                                        }, newDeclaration);\r\n\r\n                                                        document.getElementById('id_declarationjson').value = JSON.stringify(declaration);\r\n                                                    }\r\n                                                })\r\n                                            })\r\n\r\n                                        } else if (index == 3) { // Delete section.\r\n                                            child.setAttribute('data-delete-icon', 1);\r\n                                            child.removeAttribute('hidden');\r\n\r\n                                            Array.from(child.children).forEach((child, index) => {\r\n                                                child.setAttribute('id', `delete_declaration_container_${newDec.id}`);\r\n                                                Array.from(child.children).forEach((child, index) => {\r\n                                                    child.setAttribute('id', `delete_declaration_${newDec.id}`); // x icon\r\n                                                })\r\n\r\n                                            });\r\n\r\n                                            // This descriptor is not saved in the DB, so its safe to just remove it from the JSON.\r\n                                            child.addEventListener('click', function (e) {\r\n                                                let id = e.target.id.split('_');\r\n                                                id = id[id.length - 1];\r\n                                                let data = JSON.parse(document.getElementById('id_declarationjson').value);\r\n                                                data = data.filter((d) => {\r\n                                                    if (d.id != id) {\r\n                                                        return d;\r\n                                                    }\r\n                                                }, id);\r\n                                                document.getElementById('id_declarationjson').value = JSON.stringify(data);\r\n                                                // remove element from view.\r\n                                                document.getElementById(`fgroup_id_assignsubmission_declaration_group_${id}`).remove();\r\n\r\n                                            });\r\n                                            const spanText = child.innerHTML;\r\n                                            child.innerHTML = spanText.replace(newDec.old_title, newDec.declaration_title);\r\n\r\n\r\n                                        } else {\r\n                                            child.setAttribute('id', `id_assignsubmission_declaration_${newDec.id}_check`);\r\n\r\n                                        }\r\n                                    })\r\n                                }\r\n                            });\r\n\r\n                        }\r\n\r\n                    });\r\n                }\r\n                this.destroy(); // Remove the modal.\r\n            }, newDec);\r\n\r\n            // Add the descriptor to the json\r\n            let decl = JSON.parse(document.getElementById('id_declarationjson').value);\r\n            decl.push(newDec);\r\n            document.getElementById('id_declarationjson').value = JSON.stringify(decl);\r\n            declarationSubmissionContainer.insertBefore(newDeclaration, btnContainer)\r\n\r\n\r\n        }.bind(this));\r\n\r\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.CANCEL_BUTTON, function (e, data) {\r\n            // Add your logic for when the cancel button is clicked.\r\n            this.destroy();\r\n\r\n        }.bind(this));\r\n    };\r\n\r\n\r\n}\r\n\r\nNewDeclarationModal.registerModalType()"],"names":["SELECTORS","NewDeclarationModal","Modal","registerEventListeners","this","getModal","on","CustomEvents","events","activate","e","data","currentIds","Array","from","document","querySelectorAll","filter","id","getAttribute","match","lastNumber","length","split","val","isNaN","newID","JSON","parse","getElementById","value","newDec","declaration_title","declaration_text","assignment","selected","classList","remove","add","declaration","declarationSubmissionContainer","btnContainer","querySelector","newDeclaration","cloneNode","setAttribute","children","forEach","child","index","newid","old_title","innerHTML","replace","addEventListener","target","nextElementSibling","updateData","d","stringify","removeAttribute","checked","decl","spanText","destroy","push","insertBefore","bind","registerModalType"],"mappings":"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"}